题目描述：
地上有一个m行和n列的方格。一个机器人从坐标0,0的格子开始移动，每一次只能向左，右，上，下四个方向移动一格，但是不能进入行坐标和列坐标的数位之和大于k的格子。 
例如，当k为18时，机器人能够进入方格（35,37），因为3+5+3+7 = 18。但是，它不能进入方格（35,38），因为3+5+3+8 = 19。请问该机器人能够达到多少个格子？
题解：
import java.util.LinkedList;

public class Solution {
    public class Pos{
        int x,y;
        public Pos(int x,int y){
            this.x = x;
            this.y = y;
        }
    }
    public boolean check(int x,int y,int k){
        int sum = 0;
        while(x > 0){
            sum += x % 10;
            x /= 10;
        }
        while(y > 0){
            sum += y % 10;
            y /= 10;
        }
        return sum <= k;
    }
    public int movingCount(int threshold, int rows, int cols)
    {
        boolean [][]flag = new boolean[rows][cols];
        LinkedList<Pos> ans =new LinkedList<>();
        int cnt = 0;
        if(!check(0,0,threshold)){
          return 0;
        }
        cnt++;
        ans.add(new Pos(0,0));
        flag[0][0] = true;
        int [][]f = {{0,1},{0,-1},{1,0},{-1,0}};
        while(!ans.isEmpty()){
            Pos st = ans.pollFirst();
            for(int i = 0;i < 4;i++){
                int xx = st.x + f[i][0];
                int yy = st.y + f[i][1];
                if(!check(xx,yy,threshold) || xx < 0 || xx >= rows ||yy < 0 ||yy >= cols || flag[xx][yy]) continue;
                ((LinkedList<Pos>) ans).addLast(new Pos(xx,yy));
                flag[xx][yy] = true;
                cnt++;
            }
        }
        return cnt;
    }
}
