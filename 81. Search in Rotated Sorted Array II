Description:

Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.

(i.e., [0,0,1,2,2,5,6] might become [2,5,6,0,0,1,2]).

You are given a target value to search. If found in the array return true, otherwise return false.

Example 1:

Input: nums = [2,5,6,0,0,1,2], target = 0
Output: true

Solution:

class Solution {
    public boolean search(int[] nums, int target) {
        if(nums.length == 0) return false;
        int l = 0,r = nums.length - 1;
        while(l < r){
            int mid = (l + r) >> 1;
            //System.out.println(l + " " + mid + " " + r);
            if(nums[mid] == target) return true;
            if(nums[mid] > nums[r]){
                if(nums[mid] > target && nums[l] <= target) r = mid;//A sequence of deterministic monotone increases 
                else l =mid + 1;
            }
            else if(nums[mid] < nums[r]){
                if(nums[mid] < target && nums[r] >= target) l = mid + 1;//another sequence of deterministic monotone increases 
                else r = mid;
            }
            else r--;
        }
        return nums[l] == target ? true : false;
    }
}
