题目描述
统计一个数字在排序数组中出现的次数。

题解：
二分所需的数，求出在数组中出现的左右边界位置

public class Solution {
    public int GetNumberOfK(int [] array , int k) {
        if(array.length == 0) return 0;
        int numl = 0,numr = 0;
        int l = 0,r = array.length - 1;
        while(l <= r){

            int mid = (l + r) >> 1;
           // System.out.println(l + "  lllllllll  " + r + " " + array[mid]);
            if(array[mid] >= k) r = mid - 1;
            else if(array[mid] < k) l = mid + 1;
        }
        if(l >= array.length) l--;
        numl = l;
        l = 0;
        r = array.length - 1;
        while(l <= r){
            int mid = (l + r) >> 1;
           // System.out.println(l + "  rrrrrrrrrrr  " + r + " " + array[mid]);
            if(array[mid] > k) r = mid - 1;
            else l = mid + 1;
        }
        if(r < 0) r++;
        numr = r;
        if(array[numl] != k || array[numr] != k) return 0;
        else return numr - numl + 1;
    }
}
